version: '3.8'

services:
  # Application service for production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: acquisitions-app-prod
    ports:
      - "3000:3000"
    env_file:
      - .env.production
      # Production database URL should be injected as environment variable
      # Example: DATABASE_URL=postgres://username:password@ep-example.us-east-1.aws.neon.tech/dbname?sslmode=require
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      # Only mount logs directory in production
      - ./logs:/app/logs
    networks:
      - acquisitions-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Optional: Reverse proxy for production (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: acquisitions-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - app
  #   networks:
  #     - acquisitions-network
  #   restart: unless-stopped

networks:
  acquisitions-network:
    driver: bridge

# Production deployment notes:
# 1. Set DATABASE_URL environment variable to your Neon Cloud connection string
# 2. Set JWT_SECRET environment variable to a secure random string
# 3. Ensure SSL certificates are properly configured if using HTTPS
# 4. Consider using Docker Swarm or Kubernetes for production orchestration
# 5. Implement proper logging aggregation and monitoring
